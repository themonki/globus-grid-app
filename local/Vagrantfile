# -*- mode: ruby -*-
# vi: set ft=ruby :

#Cargar los valores de configuracion
env_file = File.dirname(__FILE__) + "/../etc/env.rb"
default_env_file = ENV['ENV_FILE']
require default_env_file != nil && File.exists?(default_env_file) ? default_env_file : env_file

Vagrant.require_version ">= 1.6.5"

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
	MACHINE_SLAVES.each do |name, slave|
		config.vm .define slave[:node_name] do |node|
			node.vm.box = "centos64"
			#node.vm.boot_mode = :gui
			#node.vm.network "public_network", bridge: "wlan0" #"eth0" #quitar bridge para que vagrant pregunte cual interfaz utilizar
			node.vm.network "private_network", ip: slave[:ip]
			node.vm.provider "virtualbox" do |vb|
				vb.customize ["modifyvm", :id, "--memory", 400, "--cpus", 2, "--name", slave[:vm_name] ]
			end
			node.vm.provision :chef_solo do |chef|
				chef.cookbooks_path = "cookbooks"
				chef.json.merge!({
					:run_list => [ "recipe[confighost::preinstall]",
					"recipe[chefInstall::install]"]
				})
			end
			node.vm.synced_folder "../etc/", "/globus-grid-app/etc"
		end
	end

	config.vm .define MACHINE_MASTER[:node_name] do |node|
		node.vm.box = "centos64"
		#node.vm.boot_mode = :gui
		#node.vm.network "public_network", bridge: "wlan0" #"eth0" #quitar bridge para que vagrant pregunte cual interfaz utilizar
		node.vm.network "private_network", ip: MACHINE_MASTER[:ip]
		node.vm.provider "virtualbox" do |vb|
			vb.customize ["modifyvm", :id, "--memory", 400, "--cpus", 2, "--name", MACHINE_MASTER[:vm_name] ]
		end
		node.vm.provision :chef_solo do |chef|
			chef.cookbooks_path = "cookbooks"
			chef.json.merge!({
				:run_list => [ "recipe[confighost::preinstall]",
					"recipe[chefInstall::install]"]
			})
		end
		node.vm.synced_folder "../etc/", "/globus-grid-app/etc"
	end

end
